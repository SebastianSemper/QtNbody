#############################################################################
# Makefile for building: QtNbody
# Generated by qmake (2.01a) (Qt 4.6.2) on: Fr. Okt 7 01:08:33 2011
# Project:  QtNbody.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = i586-mingw32msvc-g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall $(DEFINES)
INCPATH       = -I"/usr/i586-mingw32msvc/qt/include/QtCore" -I"/usr/i586-mingw32msvc/qt/include/QtGui" -I"/usr/i586-mingw32msvc/qt/include" -I"." -I"release" -I"." -I"/usr/i586-mingw32msvc/qt/include" -I"/usr/share/qt4/mkspecs/win32-g++-cross"
LINK        =        i586-mingw32msvc-g++
LFLAGS        =        -mthreads -Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mwindows -Wl,-s
LIBS        =        -L"/usr/i586-mingw32msvc/qt/lib" -lQtGui4 -lQtCore4 
QMAKE         = /usr/bin/qmake-qt4
IDC           = /usr/bin/idc
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm -f
DEL_DIR       = rm -rf
MOVE          = mv
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = gui.cpp \
		main.cpp \
		NbPartikel.cpp \
		NbVis.cpp \
		scene.cpp release/moc_gui.cpp
OBJECTS       = release/gui.o \
		release/main.o \
		release/NbPartikel.o \
		release/NbVis.o \
		release/scene.o \
		release/moc_gui.o
DIST          = 
QMAKE_TARGET  = QtNbody
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = QtNbody.exe
DESTDIR_TARGET = release/QtNbody.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_gui.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/win32-g++-cross -unix -o Makefile.Release QtNbody.pro

dist:
	$(ZIP) QtNbody.zip $(SOURCES) $(DIST) QtNbody.pro /usr/share/qt4/mkspecs/qconfig.pri /usr/share/qt4/mkspecs/features/qt_functions.prf /usr/share/qt4/mkspecs/features/qt_config.prf /usr/share/qt4/mkspecs/features/exclusive_builds.prf /usr/share/qt4/mkspecs/features/default_pre.prf /usr/share/qt4/mkspecs/features/release.prf /usr/share/qt4/mkspecs/features/debug_and_release.prf /usr/share/qt4/mkspecs/features/default_post.prf /usr/share/qt4/mkspecs/features/build_pass.prf /usr/share/qt4/mkspecs/features/warn_on.prf /usr/share/qt4/mkspecs/features/qt.prf /usr/share/qt4/mkspecs/features/unix/thread.prf /usr/share/qt4/mkspecs/features/moc.prf /usr/share/qt4/mkspecs/features/resources.prf /usr/share/qt4/mkspecs/features/uic.prf /usr/share/qt4/mkspecs/features/yacc.prf /usr/share/qt4/mkspecs/features/lex.prf /usr/share/qt4/mkspecs/features/include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/gui.o release/main.o release/NbPartikel.o release/NbVis.o release/scene.o release/moc_gui.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_gui.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_gui.cpp
release/moc_gui.cpp: ui_gui.h \
		scene.h \
		NbPartikel.h \
		NbVis.h \
		gui.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 gui.h -o release/moc_gui.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_gui.h
compiler_uic_clean:
	-$(DEL_FILE) ui_gui.h
ui_gui.h: gui.ui
	/usr/bin/uic-qt4 gui.ui -o ui_gui.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/gui.o: gui.cpp gui.h \
		ui_gui.h \
		scene.h \
		NbPartikel.h \
		NbVis.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/gui.o gui.cpp

release/main.o: main.cpp gui.h \
		ui_gui.h \
		scene.h \
		NbPartikel.h \
		NbVis.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/NbPartikel.o: NbPartikel.cpp NbPartikel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/NbPartikel.o NbPartikel.cpp

release/NbVis.o: NbVis.cpp NbVis.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/NbVis.o NbVis.cpp

release/scene.o: scene.cpp scene.h \
		NbPartikel.h \
		NbVis.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/scene.o scene.cpp

release/moc_gui.o: release/moc_gui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_gui.o release/moc_gui.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

